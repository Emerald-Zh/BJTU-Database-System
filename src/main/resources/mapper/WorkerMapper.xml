<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.project.mapper.WorkerMapper">

    <resultMap id="BaseResultMap" type="com.manage.project.model.domain.Worker">
            <id property="workerId" column="worker_id" jdbcType="INTEGER"/>
            <result property="workerName" column="worker_name" jdbcType="VARCHAR"/>
            <result property="workerSex" column="worker_sex" jdbcType="CHAR"/>
            <result property="workerAge" column="worker_age" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        worker_id,worker_name,worker_sex,
        worker_age
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from worker
        where  worker_id = #{workerId,jdbcType=INTEGER} 
    </select>
    <select id="selectWorkList" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from worker
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from worker
        where  worker_id = #{workerId,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="worker_id" keyProperty="workerId" parameterType="com.manage.project.model.domain.Worker" useGeneratedKeys="true">
        insert into worker
        ( worker_id,worker_name,worker_sex
        ,worker_age)
        values (#{workerId,jdbcType=INTEGER},#{workerName,jdbcType=VARCHAR},#{workerSex,jdbcType=CHAR}
        ,#{workerAge,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="worker_id" keyProperty="workerId" parameterType="com.manage.project.model.domain.Worker" useGeneratedKeys="true">
        insert into worker
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="workerId != null">worker_id,</if>
                <if test="workerName != null">worker_name,</if>
                <if test="workerSex != null">worker_sex,</if>
                <if test="workerAge != null">worker_age,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="workerId != null">#{workerId,jdbcType=INTEGER},</if>
                <if test="workerName != null">#{workerName,jdbcType=VARCHAR},</if>
                <if test="workerSex != null">#{workerSex,jdbcType=CHAR},</if>
                <if test="workerAge != null">#{workerAge,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.manage.project.model.domain.Worker">
        update worker
        <set>
                <if test="workerName != null">
                    worker_name = #{workerName,jdbcType=VARCHAR},
                </if>
                <if test="workerSex != null">
                    worker_sex = #{workerSex,jdbcType=CHAR},
                </if>
                <if test="workerAge != null">
                    worker_age = #{workerAge,jdbcType=INTEGER},
                </if>
        </set>
        where   worker_id = #{workerId,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.manage.project.model.domain.Worker">
        update worker
        set 
            worker_name =  #{workerName,jdbcType=VARCHAR},
            worker_sex =  #{workerSex,jdbcType=CHAR},
            worker_age =  #{workerAge,jdbcType=INTEGER}
        where   worker_id = #{workerId,jdbcType=INTEGER} 
    </update>
</mapper>
